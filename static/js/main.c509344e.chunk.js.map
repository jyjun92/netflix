{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","id","year","title","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","key","slice","Home","isLoading","movies","getmovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Navigation","fromNavigation","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"qRAaeA,MAXf,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GACL,yBAAKG,UAAU,oBAClB,6HAIA,wD,gFCgCOC,MApCf,YAAsD,IAAtCC,EAAqC,EAArCA,GAAGC,EAAkC,EAAlCA,KAAKC,EAA6B,EAA7BA,MAAMC,EAAuB,EAAvBA,QAAQC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OACzC,OACA,kBAAC,IAAD,CAAMC,GAAM,CACRC,SAAS,UAAD,OAAYP,GACpBQ,MAAO,CACHR,KACAC,OACAC,QACAC,UACAC,SACAC,YAIR,yBAAKP,UAAU,SACX,yBAAKW,IAAKL,EAAQM,IAAKR,EAAOA,MAAOA,IACrC,yBAAKJ,UAAU,eACf,wBAAIA,UAAU,gBAAgBI,GAC9B,wBAAIJ,UAAU,eAAeG,GAC7B,wBAAIH,UAAU,iBAAiBO,EAAOM,KAAI,SAACC,EAAMC,GAAP,OACvC,wBAAKC,IAAOD,EAAOf,UAAW,iBAAiBc,OAElD,uBAAGd,UAAU,kBAAkBK,EAAQY,MAAM,EAAE,KAA/C,WC8BOC,G,kNA/CbR,MAAQ,CACNS,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAMAC,IAAMC,IACd,4DAPQ,gBAIEJ,EAJF,EAGRK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IATzB,2C,kEAcVQ,KAAKN,c,+BAEG,IAAD,EACuBM,KAAKjB,MAA3BS,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,6BAASpB,UAAU,aAChBmB,EACA,yBAAKnB,UAAU,UACd,0BAAMA,UAAU,gBAAhB,cAGA,yBAAKA,UAAU,UACboB,EAAOP,KAAI,SAAAe,GAAK,OAClB,kBAAC,EAAD,CACA1B,GAAM0B,EAAM1B,GACZC,KAAQyB,EAAMzB,KACdC,MAASwB,EAAMxB,MACfC,QAAWuB,EAAMvB,QACjBC,OAAUsB,EAAMC,mBAChBtB,OAAUqB,EAAMrB,kB,GAtCPuB,IAAMC,Y,MCOVC,MAZf,WACI,OAAO,6BACH,kBAAC,IAAD,CAAMxB,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAI,CACNC,SAAU,SACVC,MAAM,CACFuB,gBAAgB,KAHxB,WCiBOC,E,kLAnBPpC,QAAQC,IAAI4B,KAAK9B,OADF,MAEgB8B,KAAK9B,MAA5BsC,EAFO,EAEPA,SAAUC,EAFH,EAEGA,aACIC,IAAnBF,EAASzB,OACR0B,EAAQE,KAAK,O,+BAGZ,IACGH,EAAaR,KAAK9B,MAAlBsC,SACR,OAAIA,EAASzB,MACN,6BACH,8BAAOyB,EAASzB,MAAMN,OACtB,2BAAI+B,EAASzB,MAAML,UAGZ,S,GAhBEyB,IAAMC,W,MCaZQ,MARf,WACE,OAAO,kBAAC,IAAD,KACL,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAQ,EAAMC,UAAWxB,IACzC,kBAAC,IAAD,CAAOsB,KAAM,SAASE,UAAW9C,IACjC,kBAAC,IAAD,CAAO4C,KAAM,aAAaE,UAAWR,MCRzCS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c509344e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction About(props){\n    console.log(props);\n    return <div className=\"about__container\">\n        <span>\n            \"Freedom is the freedom to say that two plus two make four.\n            If that is... all else follows\"\n        </span>\n        <span>-George Orwell, 1984</span>\n    </div>\n}\n\nexport default About;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\nimport {Link} from \"react-router-dom\";\n\nfunction Movie({id,year,title,summary,poster,genres}){\n    return (\n    <Link to = {{\n        pathname: `/movie/${id}`,\n        state: {\n            id,\n            year,\n            title,\n            summary,\n            poster,\n            genres\n        }\n    }} \n    >\n    <div className=\"movie\">\n        <img src={poster} alt={title} title={title} />\n        <div className=\"movie__data\">\n        <h3 className=\"movie__title\">{title}</h3>\n        <h5 className=\"movie__year\">{year}</h5>\n        <ul className=\"movie__genres\">{genres.map((genre,index) => (\n           <li  key = {index} className =\"genres__genre\">{genre}</li>))}        \n        </ul>\n        <p className=\"movie__summary\">{summary.slice(0,140)}...</p>  \n        </div>\n    </div></Link>);\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired, //medium \n    year: PropTypes.number.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default Movie;","import React from 'react';\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\";\n\n//redux : allows to keep status away from. no need to reload the movie data again \n//npm i gh-pages for github pages \n// npm \n//only if you need state, you need class component : react.component\nclass Home extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  getmovies = async() => {\n    //awiat= wait for this axios function to finish in order to continue \n    const { \n      data:{\n        data: { movies }\n      }\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n      );\n    this.setState({ movies, isLoading: false });\n  };\n\n  componentDidMount(){\n    //axios = nice little later on top of fetch. npm install axios\n    this.getmovies();\n  };\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? \n        (<div className=\"loader\">\n          <span className=\"loader__text\">Loading..</span>\n        </div>\n        ) : (\n          <div className=\"movies\">\n          { movies.map(movie => (\n          <Movie \n          id = {movie.id} \n          year = {movie.year} \n          title = {movie.title} \n          summary = {movie.summary} \n          poster = {movie.medium_cover_image} \n          genres = {movie.genres}\n          />\n        ))}\n        </div>\n        )}\n      </section>\n      );\n  }\n}\n\nexport default Home;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\n\nfunction Navigation(){\n    return <div>\n        <Link to=\"/\">Home</Link>\n        <Link to={{\n            pathname: \"/about\",\n            state:{\n                fromNavigation: true\n            }\n        }}>About</Link>\n    </div>\n}\n\nexport default Navigation;","import React from \"react\";\n\n\nclass Detail extends React.Component {\n    componentDidMount(){\n        console.log(this.props);\n        const { location, history  } = this.props;\n        if(location.state === undefined ){\n            history.push(\"/\");\n        }\n    }\n    render(){\n        const { location } = this.props;\n        if (location.state){\n        return <div>\n            <span>{location.state.title}</span> \n            <p>{location.state.summary}</p>\n            </div>\n        }else{\n            return null;\n        }\n    }\n}\n\nexport default Detail;","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Navigation from \"./components/Navigation\";\nimport Detail from \"./routes/Detail\";\nimport \"./App.css\";\n\nfunction App(){\n  return <HashRouter>\n    <Navigation />\n    <Route path=\"/\" exact ={true} component={Home} />\n    <Route path =\"/about\" component={About}/>\n    <Route path =\"/movie/:id\" component={Detail}/>\n  </HashRouter>;\n}\nexport default App;\n\n\n\n\n// //state is an object. it's where you put data(dynamically changing) into component \n// class App extends React.Component {\n//   state = {\n//     count:0\n//   };\n\n//   //every time you call setState(), react will re-render, thus updating in UI \n//   add = () => { \n//     this.setState(current => ({count: current.count+1}))};\n//   minus = () => { \n//     this.setState(current => ({count: current.count-1}))};\n//   componentDidMount(){\n//     console.log(\"componenet rendered\");\n//   }\n//   componentDidUpdate(){\n//     console.log(\"I just updated\");\n//   }\n//   render() {\n//     console.log(\"I'm rendering\");\n//     return (\n//       <div>\n//         <h1>The number is : {this.state.count}</h1>\n//         <button onClick={this.add}>Add</button>\n//         <button onClick={this.minus}>Minus</button>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n//to install  prop-types for prop protection, in terminal:  npm i prop-types \n\n// function Food(props){\n//   return <div> \n//     <h2>I Like {props.name} </h2>\n//     <img src={props.picture}></img>\n//     <h5>Rating: {props.rating}/5.0</h5>\n//     </div>;\n// }\n\n// const foodILike = [\n//   {\n//     id: 1,\n//     name: \"kimchi\",\n//     image: \"https://minimalistbaker.com/wp-content/uploads/2016/02/EASY-10-ingredient-VEGAN-KIMCHI-Spicy-tangy-crunchy-DELICIOUS-vegan-glutenfree-recipe-kimchi-768x1152.jpg\",\n//     rating: 4.4\n//   },\n//   {\n//     id: 2,\n//     name: \"삼겹살\",\n//     image: \"url\",\n//     rating: 5.0\n//   },\n//   {\n//     id:3,\n//     name: \"ramen\",\n//     image: \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/190208-delish-ramen-horizontal-093-1550096715.jpg?crop=1xw:0.9995002498750624xh;center,top&resize=480:*\",\n//     rating: 4.1\n//   },\n//   {\n//     id:4,\n//     name: \"kimbap\",\n//     image: \"https://www.koreanbapsang.com/wp-content/uploads/2012/05/DSC_0406-1-e1536289445158.jpg\",\n//     rating:4.5\n//   }]\n\n//   // has to be named propTypes \n// Food.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   picture: PropTypes.string.isRequired,\n//   rating: PropTypes.number\n// };\n\n\n// function App() {\n//   return (\n//   <div>HELLO!!!!!\n//     {foodILike.map(dish => <Food key={dish.id} name={dish.name} picture={dish.image} rating={dish.rating}/>)}\n//   </div>);\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}